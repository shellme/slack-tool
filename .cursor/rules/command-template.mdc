---
description: カスタムコマンド作成用のテンプレート
globs: [".cursor/commands/*.md"]
alwaysApply: false
---

# カスタムコマンドテンプレート

新しいカスタムコマンドを作成する際は、以下のテンプレートを使用してください：

## ドキュメントテンプレート

```markdown
# [コマンド名]コマンド

## 概要
[コマンドの目的と機能を簡潔に説明]

## 使用方法
```
/[command-name] [args]
```

## パラメータ
- `param1`: [パラメータの説明]（例: [具体例]）
- `param2`: [パラメータの説明]（省略可）

## 例
```
/[command-name] [具体例1]
/[command-name] [具体例2]
```

## 実行方法
このコマンドが実行された場合、以下のスクリプトを実行してください：
```bash
./.cursor/scripts/[script-name].sh [args]
```

## 手動実行（人間向け）
```bash
# 直接スクリプトを実行
./.cursor/scripts/[script-name].sh [args]

# ヘルパーコマンド
./.cursor/scripts/[helper-name].sh [args]
```

## 実行内容
1. [処理ステップ1]
2. [処理ステップ2]
3. [処理ステップ3]

## 注意事項
- [重要な制約や前提条件]
- [実行環境の要件]
- [権限の要件]

## トラブルシューティング
- [問題1]: [解決方法]
- [問題2]: [解決方法]
```

## スクリプトテンプレート

```bash
#!/bin/bash

# [スクリプト名]
# 使用方法: ./[script-name].sh [args]

set -e

# パラメータの取得
PARAM1=$1
PARAM2=$2

# バリデーション
if [ -z "$PARAM1" ]; then
    echo "エラー: パラメータ1が指定されていません"
    echo "使用方法: $0 [param1] [param2]"
    exit 1
fi

echo "🚀 [処理名]を開始します..."
echo "パラメータ1: $PARAM1"
echo "パラメータ2: $PARAM2"

# メイン処理
# [実際の処理をここに記述]

echo "✅ [処理名]が完了しました！"
```

## チェックリスト

### ドキュメント作成時
- [ ] 概要が明確
- [ ] 使用方法が具体的
- [ ] 例が実用的
- [ ] 実行方法が正確
- [ ] 注意事項が適切
- [ ] トラブルシューティングが含まれている

### スクリプト作成時
- [ ] シェバンが設定されている
- [ ] `set -e` が設定されている
- [ ] 引数チェックが実装されている
- [ ] エラーメッセージが適切
- [ ] 進行状況が表示される
- [ ] 実行権限が設定されている

### 統合時
- [ ] ドキュメントとスクリプトが一致
- [ ] パスが正しく設定されている
- [ ] 動作確認が完了している